name: MR Checks
on: [ pull_request ]

jobs:
  python-check:
    strategy:
      max-parallel: 3
      matrix:
        target:
          - os: 'ubuntu-22.04'
            triple: 'x86_64-unknown-linux-gnu'
          - os: 'macos-12'
            triple: 'x86_64-apple-darwin'
          - os: 'windows-2022'
            triple: 'x86_64-pc-windows-msvc'
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false
    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt

      # 缓存 Poetry 依赖
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-

      # 缓存 nox 环境
      - name: Cache nox environments
        uses: actions/cache@v3
        with:
          path: .nox
          key: ${{ runner.os }}-nox-${{ matrix.python-version }}-${{ hashFiles('**/noxfile.py') }}-${{ hashFiles('**/nox_actions/**') }}
          restore-keys: |
            ${{ runner.os }}-nox-${{ matrix.python-version }}-

      - name: Install project dependencies
        run: |
          poetry install --no-interaction
          poetry lock

      - name: Lint
        run: |
          poetry run nox -s lint

      - name: Test (Basic)
        run: |
          poetry run nox -s pytest

  # 单独的作业用于真实包测试，只在 Python 3.10 上运行
  real-package-tests:
    # 只在 Python 3.10 和 Ubuntu 上运行真实包测试
    runs-on: ubuntu-22.04
    timeout-minutes: 15  # 设置超时时间为15分钟
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      # 缓存 npm 包
      - name: Cache npm packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 缓存 Poetry 依赖
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-3.10-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-3.10-

      # 缓存 nox 环境
      - name: Cache nox environments
        uses: actions/cache@v3
        with:
          path: .nox
          key: ${{ runner.os }}-nox-3.10-${{ hashFiles('**/noxfile.py') }}-${{ hashFiles('**/nox_actions/**') }}
          restore-keys: |
            ${{ runner.os }}-nox-3.10-

      - name: Verify Node.js and npm installation
        run: |
          node --version
          npm --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          poetry install

      - name: Test (Real Package Tests)
        run: |
          poetry run nox -s pytest-real-packages
